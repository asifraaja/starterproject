<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan
		base-package="com.asif.spring.starterproject.jdbc.dao.impl" />
	<tx:annotation-driven />
	
	<!-- 
		For JPA (using Hibernate)
		Step 1 : Create a DataSource using DriveManagerDataSource(driverClassName, url, username, password)
		Step 2 : Create a LocalSessionFactoryBean (dataSource, hibernateProperties, annotatedClasses)
		Step 3 : Create HibernateTemplate(sessionFactory)
		Step 4 : Now use hibernateTemplate in your Implementation
	 -->

	<bean name="driverManagerDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="com.mysql.jdbc.Driver"
		p:url="jdbc:mysql://localhost:3306/movie_app" p:username="root"
		p:password="Guddu786">

	</bean>

	<bean name="localSessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
		p:dataSource-ref="driverManagerDataSource">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>com.asif.spring.starterproject.jdbc.dto.Product</value>
			</list>
		</property>
	</bean>


	<bean name="hibernateTemplate"
		class="org.springframework.orm.hibernate5.HibernateTemplate"
		p:sessionFactory-ref="localSessionFactory" />
	
	<bean name="transactionManager" 
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		p:sessionFactory-ref="localSessionFactory"/>

	<!-- We use JdbcTemplate wrapper instead of writing the create, execute, 
		close (connections & statements) <bean class="org.springframework.jdbc.core.JdbcTemplate" 
		name="jdbcTemplate" p:dataSource-ref="driverManagerDataSource" /> -->

</beans>